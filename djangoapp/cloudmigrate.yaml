steps:
  # 0. Docker Build
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "--no-cache"
      - "-t"
      - "$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME"
      - .
      - "-f"
      - Dockerfile
    id: Build

  # 1. Docker push to Google Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME"
    id: Push

  # 2. Make migrations
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - "-i"
      - "$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME"
      - "-s"
      - "${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}"
      - "-e"
      - "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}"
      - "--"
      - "python"
      - "manage.py"
      - "makemigrations"
    id: Make migrations

  # 3. Migrate
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - "-i"
      - "$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME"
      - "-s"
      - "${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}"
      - "-e"
      - "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}"
      - "--"
      - "python"
      - "manage.py"
      - "migrate"
    id: Migrate

    # 4. Collect static
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - "-i"
      - "$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME"
      - "-s"
      - "${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}"
      - "-e"
      - "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}"
      - "--"
      - "python"
      - "manage.py"
      - "collectstatic"
      - "--no-input"
    id: Collect static

# Store images in Google Artifact Registry
images:
  - "$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME"

substitutions:
  _DB_INSTANCE: "sthega-db-prod"
  _DEPLOY_REGION: "southamerica-east1"
  _GCR_HOSTNAME: "gcr.io"
  _SECRET_SETTINGS_NAME: "django_settings"
  _SERVICE_NAME: "sthega-instance"
